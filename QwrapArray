#include<iostream>
#include<stdio.h>
#define MAX 4
using namespace std;

class queue1
{
    int front;
    int rear;
    public:int q1[MAX];
    queue1()
    {
        front=0;
        rear=0;
    }
    int enqueue();
    int dequeue();
    int display();
    int frontItem();
    int qsize();
};
int queue1::qsize()
{
   return (MAX-front+rear)%MAX;
}

int queue1::enqueue()
{
    int val;
    if(qsize()==MAX+1)
    {
        cout<<"Error: Queue full";
    }
    else
    {
        cout<<"enter Item value:";
        cin>>val;
        q1[rear]=val;
        rear=(rear+1)%MAX;
    }
    return front;
}

int queue1::dequeue()
{
 if(front==rear)
 {
     cout<<"queue is empty";
 }
 else
 {
     cout<<"deleting item:";
     cout<<q1[front];
     q1[front]=NULL;
     front=(front+1)%MAX;
 }
}

int queue1::display()
{
     int j;
     for(j=0;j<=MAX;j++)
     {
         cout<<q1[j];
         cout<<",";
     }
 
}

int main()
{
int c;
struct queue1 q; 
cout <<"Hello World";
cout << "Enter choice 1.Insert 2.Delete 3.display 4.Close 5.Size";
cin>>c;
while(c!=4)
{
switch(c)
{
    case 1: 
    q.enqueue();
    cout<<"Enter choice 1.Insert 2.Delete 3.display 4.Close 5.Size";
    cin>>c;
    break;
    case 2: 
  q.dequeue();
    cout<<"Enter choice 1.Insert 2.Delete 3.display 4.Close 5.Size";
    cin>>c;
    break;
    case 3: 
    q.display ();
    cout<<"Enter choice 1.Insert 2.Delete 3.display 4.Close 5.Size";
    cin>>c;
    break;
    case 4: 
    break;
    case 5:
    cout<<" size is:";
    cout<<q.qsize();
    cout<<"Enter choice 1.Insert 2.Delete 3.display 4.Close 5.Size";
    cin>>c;
    break;
}
}
    return 0;
}
